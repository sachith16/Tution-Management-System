/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import model.attendanceModel;
import model.changeClassModel;
import model.studentModel;

/**
 *
 * @author sachee
 */
public class viewAttendance extends javax.swing.JFrame {

    String s1 = "Number";
    String s2 = "Name";
    String date;
    String ClassID;
    String dayst[] = {"day1", "day2", "day3", "day4", "day5"};
    SimpleDateFormat ft
            = new SimpleDateFormat("MM");
    SimpleDateFormat ft2
            = new SimpleDateFormat("yyyy");
    SimpleDateFormat ftt3
            = new SimpleDateFormat("MMMM");
    SimpleDateFormat ftt
            = new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat ftt2
            = new SimpleDateFormat("dd");
    SimpleDateFormat ft3
            = new SimpleDateFormat("E");
    SimpleDateFormat ft4
            = new SimpleDateFormat("yyyy-MM-");
    SimpleDateFormat ft5
            = new SimpleDateFormat("yyyyMMMM");
    Date dNow = new Date();
    JPopupMenu jPopupMenu1 = new JPopupMenu();

    /**
     * Creates new form viewAttendance
     */
    public viewAttendance(String ClassID, String date1) {

        this.date = date1;
        this.ClassID = ClassID;
        findDates(ft4.format(dNow));
        initComponents();
        setLocationRelativeTo(null);
        dtm.setRowCount(0);
        initialize();

    }

    public void initialize() {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/Entypo_2713(0)_128.png")));
        setTitle("View attendance");
    }

    private void findDates(String date2) {
        int n1 = 0;

        changeClassModel Mod2 = null;

        Date t;

        dayst[4] = "Empty";

        loop1:
        for (int i = 1; i <= 31; i++) {

            try {
                t = ftt.parse(date2 + i);
                if (i > 20 && Integer.parseInt(ftt2.format(t)) < 10) {
                    break loop1;
                }
                if (ft3.format(t).equals(date.substring(0, 3))) {
                    dayst[n1] = ftt.format(t);

                    Mod2 = controller.payController.searchChangeClass(ClassID, ftt.format(t));
                    if (Mod2 != null) {
                        dayst[n1] = Mod2.getDate2();
                    }

                    n1++;
                }

            } catch (ParseException e) {
                JOptionPane.showMessageDialog(null, "Unparseable using " + ftt, "ERROR", JOptionPane.ERROR_MESSAGE);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(viewAttendance.this, ex.getMessage());
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(viewAttendance.this, ex.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        months = new javax.swing.JSpinner(new SpinnerDateModel());
        years = new javax.swing.JSpinner(new SpinnerDateModel());
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        if(dayst[4].equals("Empty")){
            jTable1.setModel(dtm=new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null},
                    {null, null},
                    {null, null},
                    {null, null}
                },
                new String [] {
                    s1, s2,dayst[0],dayst[1],dayst[2],dayst[3]
                }
            ));
        }else{
            jTable1.setModel(dtm=new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null},
                    {null, null},
                    {null, null},
                    {null, null}
                },
                new String [] {
                    s1, s2,dayst[0],dayst[1],dayst[2],dayst[3],dayst[4]
                }
            ));
        }
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        JSpinner.DateEditor timeEditor1 = new JSpinner.DateEditor(months, "MMMM");
        months.setEditor(timeEditor1);
        months.setValue(new Date());
        jPanel1.add(months, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 50, 90, -1));
        months.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        months.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                monthsMouseClicked(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Entypo_25b6(0)_32.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(461, 461, 461)
                .addComponent(months, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(years, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(424, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(months, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(years, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        JSpinner.DateEditor timeEditor2 = new JSpinner.DateEditor(years, "yyyy");
        years.setEditor(timeEditor2);
        years.setValue(new Date());
        jPanel1.add(years, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 50, 90, -1));
        years.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void monthsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monthsMouseClicked

    }//GEN-LAST:event_monthsMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String date2 = ft2.format(years.getValue()) + "-" + ft.format(months.getValue()) + "-";
        findDates(date2);
        if (dayst[4].equals("Empty")) {
            jTable1.setModel(dtm = new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        s1, s2, dayst[0], dayst[1], dayst[2], dayst[3]
                    }
            ));

//            String sql = "Select StID,name,Date1,Date2,Date3,Date4,Date5,PayedDate From Attendance natural join Student where ClassID like '"
//                    + ClassID + "' and MonthCode like '" + (ft2.format(years.getValue()) + ftt3.format(months.getValue()) + "'");
//            try {
//                Class.forName("com.mysql.jdbc.Driver");
//            } catch (ClassNotFoundException e) {
//                System.out.println("mysql-java Drvier not found..");
//            }
            try {
                attendanceModel[] Mod = controller.attendanceController.viewAttendance(ClassID, (ft2.format(years.getValue()) + ftt3.format(months.getValue())));
//                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/tution", "root", "1234");
//                java.sql.Statement stm = conn.createStatement();
//                ResultSet rst = stm.executeQuery(sql);
                for (int i = 0; i < Mod.length; i++) {
                    String rowmod1[] = {Mod[i].getStID(), Mod[i].getName(), (Mod[i].getDate1() + "(PAID)"), Mod[i].getDate2(),
                        Mod[i].getDate3(), Mod[i].getDate4()};

                    String rowmod2[] = {Mod[i].getStID(), Mod[i].getName(), Mod[i].getDate1(), (Mod[i].getDate2() + "(PAID)"),
                        Mod[i].getDate3(), Mod[i].getDate4()};

                    String rowmod3[] = {Mod[i].getStID(), Mod[i].getName(), Mod[i].getDate1(), Mod[i].getDate2(),
                        (Mod[i].getDate3() + "(PAID)"), Mod[i].getDate4()};

                    String rowmod4[] = {Mod[i].getStID(), Mod[i].getName(), Mod[i].getDate1(), Mod[i].getDate2(),
                        Mod[i].getDate3(), (Mod[i].getDate4() + "(PAID)")};

                    String rowmod5[] = {Mod[i].getStID(), Mod[i].getName(), Mod[i].getDate1(), Mod[i].getDate2(),
                        Mod[i].getDate3(), Mod[i].getDate4()};

                    String rowmod6[] = {Mod[i].getStID(), Mod[i].getName(), Mod[i].getDate1() + "(PAID-" + Mod[i].getPayedDate() + ")", Mod[i].getDate2(),
                        Mod[i].getDate3(), Mod[i].getDate4()};
                    
//                    System.out.println(Mod[i].getStID());
                    
                    if (Mod[i].getPayedDate().equals(dayst[0])) {
                        dtm.addRow(rowmod1);
                    } 
                    if (Mod[i].getPayedDate().equals(dayst[1])) {
                        dtm.addRow(rowmod2);
                    } 
                    if (Mod[i].getPayedDate().equals(dayst[2])) {
                        dtm.addRow(rowmod3);
                    } 
                    if (Mod[i].getPayedDate().equals(dayst[3])) {
                        dtm.addRow(rowmod4);
                    } 
                    if (Mod[i].getPayedDate().equals("")) {
                        dtm.addRow(rowmod5);
                    } 
                    if (!Mod[i].getPayedDate().equals(dayst[0]) && !Mod[i].getPayedDate().equals(dayst[1]) &&
                            !Mod[i].getPayedDate().equals(dayst[2]) && !Mod[i].getPayedDate().equals(dayst[3])
                            && !Mod[i].getPayedDate().equals("")) {
                        dtm.addRow(rowmod6);
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(viewAttendance.this, ex.getMessage());
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(viewAttendance.this, ex.getMessage());
            }

        } else {
            jTable1.setModel(dtm = new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        s1, s2, dayst[0], dayst[1], dayst[2], dayst[3], dayst[4]
                    }
            ));

//            String sql = "Select StID,name,Date1,Date2,Date3,Date4,Date5,PayedDate From Attendance natural join Student where ClassID like '"
//                    + ClassID + "' and MonthCode like '" + (ft2.format(years.getValue()) + ftt3.format(months.getValue()) + "'");
//            try {
//                Class.forName("com.mysql.jdbc.Driver");
//            } catch (ClassNotFoundException e) {
//                System.out.println("mysql-java Drvier not found..");
//            }
            try {
//                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/tution", "root", "1234");
//                java.sql.Statement stm = conn.createStatement();
//                ResultSet rst = stm.executeQuery(sql);
                attendanceModel[] Mod = controller.attendanceController.viewAttendance(ClassID, (ft2.format(years.getValue()) + ftt3.format(months.getValue())));

                for (int i = 0; i < Mod.length; i++) {
                    String rowmod1[] = {Mod[i].getStID(), Mod[i].getName(), (Mod[i].getDate1() + "(PAID)"), Mod[i].getDate2(),
                        Mod[i].getDate3(), Mod[i].getDate4(), Mod[i].getDate5()};
                    String rowmod2[] = {Mod[i].getStID(), Mod[i].getName(), Mod[i].getDate1(), (Mod[i].getDate2() + "(PAID)"),
                        Mod[i].getDate3(), Mod[i].getDate4(), Mod[i].getDate5()};
                    String rowmod3[] = {Mod[i].getStID(), Mod[i].getName(), Mod[i].getDate1(), Mod[i].getDate2(),
                        (Mod[i].getDate3() + "(PAID)"), Mod[i].getDate4(), Mod[i].getDate5()};
                    String rowmod4[] = {Mod[i].getStID(), Mod[i].getName(), Mod[i].getDate1(), Mod[i].getDate2(),
                        Mod[i].getDate3(), (Mod[i].getDate4() + "(PAID)"), Mod[i].getDate5()};
                    String rowmod5[] = {Mod[i].getStID(), Mod[i].getName(), Mod[i].getDate1(), Mod[i].getDate2(),
                        Mod[i].getDate3(), Mod[i].getDate4(), (Mod[i].getDate5() + "(PAID)")};
                    String rowmod6[] = {Mod[i].getStID(), Mod[i].getName(), Mod[i].getDate1(), Mod[i].getDate2(),
                        Mod[i].getDate3(), Mod[i].getDate4(), Mod[i].getDate5()};
                    String rowmod7[] = {Mod[i].getStID(), Mod[i].getName(), Mod[i].getDate1() + "(PAID-" + Mod[i].getPayedDate() + ")", Mod[i].getDate2(),
                        Mod[i].getDate3(), Mod[i].getDate4()};

                    if (Mod[i].getPayedDate().equals(dayst[0])) {
                        dtm.addRow(rowmod1);
                    }
                    if (Mod[i].getPayedDate().equals(dayst[1])) {
                        dtm.addRow(rowmod2);
                    }
                    if (Mod[i].getPayedDate().equals(dayst[2])) {
                        dtm.addRow(rowmod3);
                    }
                    if (Mod[i].getPayedDate().equals(dayst[3])) {
                        dtm.addRow(rowmod4);
                    }
                    if (Mod[i].getPayedDate().equals(dayst[4])) {
                        dtm.addRow(rowmod5);
                    }
                    if (Mod[i].getPayedDate().equals("")) {
                        dtm.addRow(rowmod6);
                    }
                    
                    if (!Mod[i].getPayedDate().equals(dayst[0]) && !Mod[i].getPayedDate().equals(dayst[1]) &&
                            !Mod[i].getPayedDate().equals(dayst[2]) && !Mod[i].getPayedDate().equals(dayst[3])
                            && !Mod[i].getPayedDate().equals("")
                            && !Mod[i].getPayedDate().equals(dayst[4])) {
                        dtm.addRow(rowmod7);
                    }

                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(viewAttendance.this, ex.getMessage());
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(viewAttendance.this, ex.getMessage());
            }

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getButton() == MouseEvent.BUTTON3) {
            int index = jTable1.getSelectedRow();
            if (index >= 0) {
                String conumber = (String) jTable1.getValueAt(index, 0);
                JMenuItem item[] = new JMenuItem[5];

                try {
                    if (controller.studentController.searchStudent(conumber) != null) {
                        studentModel stMod = controller.studentController.searchStudent(conumber);

                        item[0] = new JMenuItem(stMod.getAddress());
                        item[1] = new JMenuItem(stMod.getGrade());
                        item[2] = new JMenuItem(stMod.getSchool());
                        item[3] = new JMenuItem(stMod.getTelM());
                        item[4] = new JMenuItem(stMod.getTelH());
                    }
                } catch (SQLException e) {
                    System.out.println(e.getMessage());
                } catch (ClassNotFoundException e) {
                    System.out.println(e.getMessage());
                }

                jPopupMenu1.removeAll();
                jPopupMenu1.add(item[0]);
                jPopupMenu1.add(item[1]);
                jPopupMenu1.add(item[2]);
                jPopupMenu1.add(item[3]);
                jPopupMenu1.add(item[4]);
                jPopupMenu1.show(jTable1, evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewAttendance("C7", "Sunday").setVisible(true);
            }
        });
    }

    private javax.swing.table.DefaultTableModel dtm;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JSpinner months;
    private javax.swing.JSpinner years;
    // End of variables declaration//GEN-END:variables
}
